def len_log(words):
    if not words:
        return 0
    return max(len(word) for word in words)
def find_substring(strings, substring):
    for string in strings:
        if substring in string:
            return True
    return False
def is_undulating(n):
    n = str(n)
    if len(n) < 3:
        return False
    distinct_digits = set(n)
    if len(distinct_digits) != 2:
        return False
    for i in range(len(n) - 1):
        if n[i] == n[i + 1]:
            return False
    return True
def power(a, b):
    return a ** b
def index_minimum(tuples):
    return min(tuples, key=lambda x: x[1])[0]
def Find_Min_Length(lst):
    return min(len(sublist) for sublist in lst)
def divisor(n):
    count = 0
    i = 1
    while i * i <= n:
        if n % i == 0:
            if i * i == n:
                count += 1
            else:
                count += 2
        i += 1
    return count
def frequency_lists(lists):
    freq = {}
    for sublist in lists:
        for element in sublist:
            freq[element] = freq.get(element, 0) + 1
    return freq
def multiply_num(numbers):
    product = 1
    for num in numbers:
        product *= num
    return product / len(numbers)
def decimal_to_binary(n):
    return bin(n)[2:]
